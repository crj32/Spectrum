% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectrum.R
\name{Spectrum}
\alias{Spectrum}
\title{Spectrum: Fast Adaptive Spectral Clustering for Single and Multi-view Data}
\usage{
Spectrum(data, method = 1, silent = FALSE, showres = TRUE,
  diffusion = TRUE, kerneltype = c("density", "stsc"), maxk = 10,
  NN = 3, NN2 = 7, showpca = FALSE, frac = 2, thresh = 7,
  fontsize = 18, dotsize = 3, tunekernel = FALSE,
  clusteralg = "GMM", FASP = FALSE, FASPk = NULL, fixk = NULL,
  krangemax = 10, runrange = FALSE, diffusion_iters = 4,
  KNNs_p = 10, missing = FALSE)
}
\arguments{
\item{data}{Data frame or list of data frames: contains the data with points to cluster as columns and rows as features. For multi-view data a list of dataframes is to be supplied with the samples in the same order.}

\item{method}{Numerical value: 1 = default eigengap method (Gaussian clusters), 2 = multimodality gap method (Gaussian/ non-Gaussian clusters), 3 = no automatic method (see fixk param)}

\item{silent}{Logical flag: whether to turn off messages}

\item{showres}{Logical flag: whether to show the results on the screen}

\item{diffusion}{Logical flag: whether to perform graph diffusion to reduce noise (default=TRUE)}

\item{kerneltype}{Character string: 'density' (default) = adaptive density aware kernel, 'stsc' = Zelnik-Manor self-tuning kernel}

\item{maxk}{Numerical value: the maximum number of expected clusters (default=10). This is data dependent, do not set excessively high.}

\item{NN}{Numerical value: kernel param, the number of nearest neighbours to use sigma parameters (default=3)}

\item{NN2}{Numerical value: kernel param, the number of nearest neighbours to use for the common nearest neigbours (default = 7)}

\item{showpca}{Logical flag: whether to show pca when running on one view}

\item{frac}{Numerical value: optk search param, fraction to find the last substantial drop (multimodality gap method param)}

\item{thresh}{Numerical value: optk search param, how many points ahead to keep searching (multimodality gap method param)}

\item{fontsize}{Numerical value: controls font size of the ggplot2 plots}

\item{dotsize}{Numerical value: controls the dot size of the ggplot2 plots}

\item{tunekernel}{Logical flag: whether to tune the kernel, only applies for method 2 (default=FALSE)}

\item{clusteralg}{Character string: clustering algorithm for eigenvector matrix (GMM or km)}

\item{FASP}{Logical flag: whether to use Fast Approximate Spectral Clustering (for v. high sample numbers)}

\item{FASPk}{Numerical value: the number of centroids to compute when doing FASP}

\item{fixk}{Numerical value: if we are just performing spectral clustering without automatic selection of K, set this parameter and method to 3}

\item{krangemax}{Numerical value: the maximum K value to iterate towards when running a range of K}

\item{runrange}{Logical flag: whether to run a range of K or not (default=FALSE), puts Kth results into Kth element of list}

\item{diffusion_iters}{Numerical value: number of diffusion iterations for the graph (default=4)}

\item{KNNs_p}{Numerical value: number of KNNs when making KNN graph (default=10, suggested=10-20)}

\item{missing}{Logical flag: whether to impute missing data in multi-view analysis (default=FALSE)}
}
\value{
A list, containing: 
1) cluster assignments, in the same order as input data columns 
2) eigenvector analysis results (either eigenvalues or dip test statistics)
3) optimal K
4) final similarity matrix
5) eigenvectors and eigenvalues of graph Laplacian
}
\description{
Spectrum is a self-tuning spectral clustering method for single or multi-view data. Spectrum uses a new type of adaptive
density-aware kernel that strengthens connections between points that share common nearest neighbours in the graph. 
For integrating multi-view data and reducing noise a tensor product graph data integration and diffusion procedure is used. 
Spectrum analyses eigenvector variance or distribution to determine the number of clusters. Spectrum is well suited for a wide 
range of data, including both Gaussian and non-Gaussian structures.
}
\examples{
res <- Spectrum(brain[[1]][,1:50])
}
